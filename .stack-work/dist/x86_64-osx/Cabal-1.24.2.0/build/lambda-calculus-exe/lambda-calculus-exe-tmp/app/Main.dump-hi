
==================== FINAL INTERFACE ====================
2017-03-07 21:36:42.422506 UTC

interface main@main:Main 8002
  interface hash: 2413fdd92bc4f379f1adc84d4f232244
  ABI hash: b74de5724561ad9a4cd6211097d8d167
  export-list hash: 2db0bf99965613b97c732bbab32616ed
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 9de63707825d8eb1565842cc046e6d74
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
                      lambda-calculus-0.1.0.0@lambda-calculus-0.1.0.0-71ACHzEMgLIBMHG57ZzwZM
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO c9de64c5f5407c4cf1c52500c4d15200
import  -/  lambda-calculus-0.1.0.0@lambda-calculus-0.1.0.0-71ACHzEMgLIBMHG57ZzwZM:Lib b34a9ecb0bdbbcfda7f880c6b6029c20
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
ef475d740062e25a7fa4d5e9b487cb08
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
2ffb425a7df9a430bc1153c127e5c42e
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main4
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main3
                        GHC.Types.True
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.main2
                   GHC.Types.True
                   ipv2 } }) -}
4fc87e68cbf988941a42c601de27bfc9
  main2 :: GHC.Base.String
  {- Unfolding: (case Lib.evalExp
                        Lib.Root
                        Lib.prog of ww { Lib.Lambda ww1 ww2 ww3 ->
                 Lib.$w$cshow ww1 ww2 }) -}
4413ff2ebd8cb16f4cebe7bd7b7dfc62
  main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "...evaluates to..."#) -}
f255b9bb3b9dba9e7ae0eae9c4261b69
  main4 :: GHC.Base.String
  {- Unfolding: (Lib.$fShowExpr_$cshow Lib.prog) -}
e11e355b9727a87d543c96f5971724a8
  main5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

